$radius: 130px;
$primary-color: #1B262C;
$color-1 : #0F4C75 ;
$color-2 : #3282B8;
$color-3 : #BBE1FA;

html{
  color: white; 
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}
#diriku{
  position: absolute;
  background-color: #3282B8;
  border-radius: 59% 41% 70% 30% / 78% 62% 38% 22%  ;
  height: 250px;
  border-bottom: $color-2 solid 3px;
}
#my-name{
  display: inline ;
  border-bottom: $color-2 3px solid;
  padding-bottom: 5px;
}
body { 
  background: #0e1e2f;
}
// .btn-kanan{
//   position: absolute;
//   right: 0;
//   bottom: 0;
// }
#btn-download-cv{
  position: sticky;
  color: white;
  font-weight: bold;
  background-color: $color-2;
  border-radius: 15px;
  padding: 10px 20px 10px 20px;
  float: right;
  bottom: 0;
  text-decoration: none;
}
hr{
  border: $color-1 2px solid;
  display: block;
}
.kumpulan-bhs{
  display: flex;
  justify-content: center;
  padding: 10px 30px 10px 30px;
  flex-wrap: wrap;
  gap: 10px;
}
.card-ahli{
  width: 250px;
  height: 350px;
  display: flex;
  align-items: center;
  flex-direction: column;
  overflow: hidden;
  padding: 0px 5px 0px 5px;
  border: $color-2 1px solid;
  border-radius: 8px;
  & h4{
    margin-bottom: 8px;
  }
}
// ? Animasi Kanan Diri
.container {
  position: relative;
  margin-left: 110px;
  width: 300px;
  height: 300px;
  animation: rotate 4s ease-out infinite;
  filter: url("#gooey");
}
@keyframes rotate {
  0% {
    transform: rotate(360deg);
  }
  50% {
    transform: rotate(360deg);
  }
  100% {
    transform: rotate(0deg);
  }
}
.container .liquid {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: $color-2;
  width: 140px;
  height: 140px;
  border-radius: 50%;
  --ani_dur: 4s;
}
.container .liquid:nth-child(1) {
  top: 20%;
  animation: animate1 var(--ani_dur) linear infinite;
}
.container .liquid:nth-child(2) {
  left: 20%;
  animation: animate2 var(--ani_dur) linear infinite;
}
.container .liquid:nth-child(3) {
  left: 80%;
  animation: animate3 var(--ani_dur) linear infinite;
}
.container .liquid:nth-child(4) {
  top: 80%;
  animation: animate4 var(--ani_dur) linear infinite;
}
@keyframes animate1 {
  0% {
    top: 20%;
  }
  50% {
    top: 80%;
  }
  100% {
    top: 80%;
  }
}
@keyframes animate2 {
  0% {
    left: 20%;
  }
  50% {
    left: 80%;
  }
  100% {
    left: 80%;
  }
}
@keyframes animate3 {
  0% {
    left: 80%;
  }
  50% {
    left: 20%;
  }
  100% {
    left: 20%;
  }
}
@keyframes animate4 {
  0% {
    top: 80%;
  }
  50% {
    top: 20%;
  }
  100% {
    top: 20%;
  }
}
svg {
  width: 20%;
  height: 20%;
}

@media only screen and (max-width:800px) {
  .container{
    margin: 0;
  }
}
// Animasi Loading bar
$color-black: hsl(0, 0%, 5%);
$color-color: hsl(0, 0%, 100%);

$color-html: hsl(15, 100%, 60%);
$color-css: hsl(200, 100%, 60%);
$color-scss: hsl(300, 100%, 60%);
$color-js: hsl(60, 100%, 60%);
$color-ts: hsl(220, 100%, 60%);
$color-node: hsl(110, 100%, 60%);
$color-react: hsl(180, 100%, 60%);
$color-angular: hsl(0, 100%, 60%);
$color-vue: hsl(145, 100%, 60%);

$porcent-html: 90;
$porcent-css: 85;
$porcent-scss: 70;
$porcent-js: 80;
$porcent-ts: 55;
$porcent-node: 30;
$porcent-react: 12;
$porcent-angular: 5;
$porcent-vue: 2;

@function strokeDashoffset($num) {
	@return 440 - (440 * $num) / 100;
}

* {
	box-sizing: border-box;
}

.progressbar {
	position: relative;
	width: 170px;
	height: 170px;
	margin: 1em;
	transform: rotate(-90deg);
}

.progressbar__svg {
	position: relative;
	width: 100%;
	height: 100%;
}

.progressbar__svg-circle {
	width: 100%;
	height: 100%;
	fill: none;
	stroke-width: 10;
	stroke-dasharray: 440;
	stroke-dashoffset: 440;
	stroke: hsl(0, 0%, 100%);
	stroke-linecap: round;
	transform: translate(5px, 5px); // stroke-width / 2
}

.shadow {
	&-html {
		filter: drop-shadow(0 0 5px $color-html);
	}
	&-css {
		filter: drop-shadow(0 0 5px $color-css);
	}
	&-scss {
		filter: drop-shadow(0 0 5px $color-scss);
	}
	&-js {
		filter: drop-shadow(0 0 5px $color-js);
	}
	&-ts {
		filter: drop-shadow(0 0 5px $color-ts);
	}
	&-node {
		filter: drop-shadow(0 0 5px $color-node);
	}
	&-react {
		filter: drop-shadow(0 0 5px $color-react);
	}
	&-angular {
		filter: drop-shadow(0 0 5px $color-angular);
	}
	&-vue {
		filter: drop-shadow(0 0 5px $color-vue);
	}
}

.circle {
	&-html {
		animation: anim_circle-html 1s ease-in-out forwards;
	}
	&-css {
		animation: anim_circle-css 1s ease-in-out forwards;
	}
	&-scss {
		animation: anim_circle-scss 1s ease-in-out forwards;
	}
	&-js {
		animation: anim_circle-js 1s ease-in-out forwards;
	}
	&-ts {
		animation: anim_circle-ts 1s ease-in-out forwards;
	}
	&-node {
		animation: anim_circle-node 1s ease-in-out forwards;
	}
	&-react {
		animation: anim_circle-react 1s ease-in-out forwards;
	}
	&-angular {
		animation: anim_circle-angular 1s ease-in-out forwards;
	}
	&-vue {
		animation: anim_circle-vue 1s ease-in-out forwards;
	}
}

.progressbar__text {
	position: absolute;
	top: 50%;
	left: 50%;
	padding: 0.25em 0.5em;
	color: hsl(0, 0%, 100%);
	font-family: Arial, Helvetica, sans-serif;
	border-radius: 0.25em;
	transform: translate(-50%, -50%) rotate(90deg);
}

//  @keyframes

@keyframes anim_circle-html {
	to {
		stroke-dashoffset: strokeDashoffset($porcent-html);
	}
}

@keyframes anim_circle-css {
	to {
		stroke-dashoffset: strokeDashoffset($porcent-css);
	}
}

@keyframes anim_circle-scss {
	to {
		stroke-dashoffset: strokeDashoffset($porcent-scss);
	}
}

@keyframes anim_circle-js {
	to {
		stroke-dashoffset: strokeDashoffset($porcent-js);
	}
}

@keyframes anim_circle-ts {
	to {
		stroke-dashoffset: strokeDashoffset($porcent-ts);
	}
}

@keyframes anim_circle-node {
	to {
		stroke-dashoffset: strokeDashoffset($porcent-node);
	}
}

@keyframes anim_circle-react {
	to {
		stroke-dashoffset: strokeDashoffset($porcent-react);
	}
}

@keyframes anim_circle-angular {
	to {
		stroke-dashoffset: strokeDashoffset($porcent-angular);
	}
}

@keyframes anim_circle-vue {
	to {
		stroke-dashoffset: strokeDashoffset($porcent-vue);
	}
}
